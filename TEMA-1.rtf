{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1046{\fonttbl{\f0\fnil\fcharset0 Calibri-Bold;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil\fcharset1 Segoe UI Symbol;}{\f3\fnil\fcharset128 ArialMT;}{\f4\fnil Calibri;}{\f5\fnil\fcharset0 Calibri-Italic;}}
{\colortbl ;\red255\green255\blue0;\red0\green255\blue255;\red89\green52\blue148;\red255\green154\blue0;\red0\green0\blue0;\red0\green255\blue0;\red0\green0\blue255;\red0\green77\blue187;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\qj\b\f0\fs32\lang22 Introdu\'e7\'e3o\par
\par
\b0\f1\fs22 O desenvolvimento back-end \'e9 uma parte essencial do mundo da programa\'e7\'e3o e do desenvolvimento de software. Essa \highlight1 disciplina concentra-se nas entradas invis\'edveis de aplicativos e\par
sites, garantindo que tudo funcione perfeitamente, mesmo que os usu\'e1rios finais n\'e3o vejam diretamente o trabalho realizado nos bastidores\highlight0 . O desenvolvedor \b back-end \b0\'e9 o arquiteto por tr\'e1s\par
da cortina, projetando e construindo sistemas que alimentam a l\'f3gica de neg\'f3cios, o \highlight2 armazenamento de dados e a comunica\'e7\'e3o com o front-end, que \'e9 a parte do software que os usu\'e1rios interagem.\par
\highlight0 Para desempenhar seu papel, os desenvolvedores back-end usam uma variedade de linguagens de programa\'e7\'e3o, como \ul\b Python, Java, Ruby, PHP e muitas outras\ulnone\b0 , al\'e9m de \ul\b frameworks e tecnologias\ulnone  \b0 espec\'edficas para garantir que os aplicativos sejam robustos e eficientes. \highlight2 Eles tamb\'e9m lidam com bancos de dados, modelagem de dados e servidores, garantindo que os dados sejam armazenados com seguran\'e7a e acessados rapidamente.\highlight0\par
Al\'e9m disso, o \ul\b desenvolvimento back-end desempenha um papel crucial na escalabilidade \ulnone\b0 dos aplicativos, permitindo que eles cres\'e7am para acomodar um n\'famero crescente de usu\'e1rios e funcionalidades. \highlight2\b Atrav\'e9s de APIs (interfaces de programa\'e7\'e3o de aplicativos), o back-end permite\par
que diferentes sistemas sejam comunicados\highlight0\b0 , abrindo portas para integra\'e7\'f5es com terceiros. No\par
final, o desenvolvimento back-end \'e9 a espinha dorsal da experi\'eancia do usu\'e1rio, garantindo que\par
tudo funcione sem problemas e de forma eficiente. \'c9 um campo desafiador e em constante evolu\'e7\'e3o que desempenha um papel vital no desenvolvimento de aplicativos e sites modernos.\par
\par

\pard\sa200\sl276\slmult1\qj\b\f0\fs32 Conhecendo a Linguagem PHP\b0\f1\fs22\par

\pard\qj\cf3\b\f0\fs28 Habilidades\par
\cf4\b0\f2\fs22\u9679?\f3  \cf5\f1 Compreender o uso de linguagens de alto n\'edvel e sua integra\'e7\'e3o com servi\'e7os essenciais para sistemas web;\par
\par
\cf3\b\f0\fs28 1. Introdu\'e7\'e3o ao PHP\par
\par
\cf5\b0\f1\fs22 A linguagem de programa\'e7\'e3o \ul\b PHP (Hypertext Preprocessor) \ulnone\b0 foi criada \b em 1994\b0 , por \cf0\highlight2\b Rasmus\cf5\highlight0\b0  Lerdorf, com a \b filosofia open source\b0 , c\'f3digo aberto voltada para web, sendo que para escrever a mesma \highlight2\b precisa ter conhecimento front end da linguagem de marca\'e7\'e3o HTML\highlight0\b0 , fazendo alus\'e3o a sua l\'f3gica de conhecimento o c\'f3digo escrito em PHP, que vem \highlight2 derivado do C e do Perl\highlight0 , vai ser \highlight1\b interpretado por um servidor web\highlight0\b0 , pre-processado e gerando um HTML para o usu\'e1rio, \ul nesse caso o usu\'e1rio s\'f3 vai receber dados e HTML\ulnone . Com essa linguagem podemos desenvolver in\'fameras plataformas para WEB, com mais de 20 anos essa linguagem hoje se encontra \ul\b em diversas empresas de grande e m\'e9dio porte\ulnone\b0 , podemos at\'e9 falar que hoje \b quase 65% dos sistemas Web em PHP\b0 , sendo hoje uma linguagem moderna e \highlight1\b segura com a sintaxe POO\highlight0\b0 . Vamos abordar tudo sobre a linguagem de programa\'e7\'e3o PHP, procedural uma arquitetura muito usada e segura e vamos aplicar boas pr\'e1ticas no c\'f3digo que vai ser visto nessa apostila.\par
\par
\cf0 Toda \highlight1\b linguagem procedural vem de um conceito f\'e1cil de entender, linha a linha como se fosse uma receita de bolo\highlight0\b0 , como vimos muito nas aulas de l\'f3gica onde um c\'f3digo depende de outro para rodar uma aplica\'e7\'e3o.\par
\par
\highlight6\b PHP (PHP, Hypertext pr\'e9\f4\endash\f1 processor)\highlight0\b0  \'e9 uma linguagem de programa\'e7\'e3o voltada para desenvolvimento de sistema web, foi criada pelo engenheiro Rasmus Lerdof, com o objetivo de \highlight1\b guardar dados via formul\'e1rios\highlight0\b0 , dentro do escopo Open Source (c\'f3digo aberto), lan\'e7ado na vers\'e3o 1.0, em 1994, tendo v\'e1rias vers\'f5es e atualiza\'e7\'e3o, sendo hoje uma linguagem segura e implantada com a arquitetura orientada ao objeto. \b Baseado e escrito em linguagem de programa\'e7\'e3o C\b0 .\par
\par
\ul Em junho de 1995, Rasmus liberou o seu c\'f3digo fonte do PHP ferramentas para o p\'fablico\ulnone , o que permitiu que desenvolvedores usassem da forma como desejassem. Isso permitiu - e encorajou - usu\'e1rios a fornecerem corre\'e7\'f5es para bugs no c\'f3digo, e em geral, aperfei\'e7o\'e1-lo.\par
\par
\b\f0 1.0 PHP/FI \b0\f4\endash\f1  Foi a primeira implementa\'e7\'e3o do PHP, \highlight1 desenvolvida em C. \highlight0 Ela funcionava com uma \highlight1 interface b\'e1sica de CGI\highlight0  (Common Gateway Interface), permitindo a cria\'e7\'e3o de scripts que \ul processavam formul\'e1rios e geravam p\'e1ginas din\'e2micas\ulnone . O grande diferencial dessa vers\'e3o era a capacidade \ul de embutir c\'f3digo PHP diretamente no HTML\ulnone , o que facilitava o desenvolvimento de p\'e1ginas din\'e2micas e interativas. Esse recurso deu origem ao nome PHP/FI, destacando seu prop\'f3sito inicial como uma ferramenta simples para manipular p\'e1ginas pessoais e formul\'e1rios na web.\par
\b\f0 2.0 \b0\f1 J\'e1 a segunda vers\'e3o \highlight1 ganhou dois programadores que viram o PHP como uma linguagem do futuro eles se chamavam de Zeev e Andi\highlight0 , \ul ambos Israelense\ulnone  nesta vers\'e3o ganhou o nome de PHP.\par
\b\f0 3.0 \b0\f1 Oficialmente agora com o nome PHP, \ul j\'e1 com script pr\'f3prios\ulnone , entrou no mercado de desenvolvimento de sistema WEB.\par
\b\f0 4.0 \b0\f1 Nessa vers\'e3o que foi lan\'e7ada no ano de 2000, h\'e1 duas grandes novidades, um suporte melhor \ul para conex\'e3o com o banco de dados e as primeiras express\'f5es POO\ulnone .\par

\pard\sa200\sl276\slmult1\qj Lembrando que at\'e9 aqui toda a linguagem era escrita em \ul processo de procedural\ulnone .\line\b\f0 5.0 \b0\f1 Esta vers\'e3o estava cheia \highlight1 de novas aplica\'e7\'f5es POO, o facebook adotou na \'e9poca essa linguagem para o seu projeto\highlight0 .\line\b\f0 6.0 \b0\f1 Esta vers\'e3o ficou \ul conhecida como a vers\'e3o de seguran\'e7a\ulnone , algo que todos os programadores reclamavam muito, PHP n\'e3o \'e9 seguro, agora sim uma linguagem limpa, segura e organizada.\line\b\f0 7.0 \b0\f1 Focou em melhorar o \ul desempenho, otimizar o uso de mem\'f3ria, e trazer melhorias na seguran\'e7a e na tipagem\ulnone .\line\b\f0 8.0 \b0\f1 Trouxe grandes avan\'e7os no desempenho com o JIT (\highlight1 compila\'e7\'e3o Just-In-Time (JIT), que melhora significativamente o desempenho em certos cen\'e1rios, como computa\'e7\'f5es pesadas e algoritmos complexos\highlight0 ) e melhorias na sintaxe e tipagem, o que ajuda no desenvolvimento de aplica\'e7\'f5es web e APIs.\par

\pard\qj A Linguagem PHP \ul\b necessita da linguagem de marca\'e7\'e3o de texto HTML\ulnone\b0 , embutida no seu front-end. A linguagem que vamos estudar \'e9 procedural ou tamb\'e9m conhecida como estruturada o que significa isso, \'e9 a maneira como vamos escrever nosso c\'f3digo essa maneira de codificar, \'e9 escrever bastante c\'f3digo, linha a linha podemos at\'e9 comparar com a linguagem de marca\'e7\'e3o de texto, HTML um texto que n\'e3o pode ser reutilizado, para quem est\'e1 iniciando na programa\'e7\'e3o \'e9 a maneira mais f\'e1cil de iniciar essa trajet\'f3ria como Back End.\par
\par

\pard\sa200\sl276\slmult1\qj\cf3\b\f0\fs28 1.1.Ambienta\'e7\'e3o e instala\'e7\'e3o de IDE\par

\pard\qj\cf0\b0\f1\fs22 A linguagem de PHP, pode ser escrita em qualquer sistema operacional, sendo mais indicada e r\'e1pida no Linux por ser nativo, com a linguagem PHP rodando do lado do servidor, precisamos ter um servidor WEB, APACHE ou ISS entre outros. Vamos usar o \ul servidor web APACHE\ulnone .\par
Para escrever e rodar o PHP temos que ter as seguintes ferramentas:\par
- IDE para escrever;\par
- Linguagem de programa\'e7\'e3o PHP;\par
- Servidor Web (no caso vamos rodar o APACHE);\par

\pard\sa200\sl276\slmult1\qj - SGBD(Sistema de gerenciamento de banco de dados);\par

\pard\qj\b\f0 IDE \b0\f1 (Integrated Development Environment) ou \highlight1 ambiente de desenvolvimento integrado\highlight0  \'e9 um software usado para escrever as linguagens de programa\'e7\'e3o e linguagem de marca\'e7\'e3o de texto, podemos usar qualquer IDE para essa finalidade, por ser um c\'f3digo aberto.\par

\pard\sa200\sl276\slmult1\qj Vamos usar o IDE NotePad + + ou VSCode, por ser tudo livre para escrever o HTML, CSS e o PHP.\par

\pard\qj\cf5\i\f5 Siga os passos para a instala\'e7\'e3o:\par

\pard\sa200\sl276\slmult1\qj\i0\f3 1. \b\f0 Acesse o site \b0\f1 - {\cf0{\field{\*\fldinst{HYPERLINK https://notepad-plus-plus.org/ }}{\fldrslt{https://notepad-plus-plus.org/\ul0\cf0}}}}\cf7\f1\fs22\par

\pard\qj\cf0\b\f0 2. Fazer o Download\par
\b0\f1 Clique na guia download e baixe a \'faltima vers\'e3o e escolha a vers\'e3o do seu sistema operacional sendo 32 ou 64 bits.\par
\par
\b\f0 3. Instala\'e7\'e3o\par
\b0\f1 Clique no link instalador depois de ter escolhido o tipo de bits que o seu sistema operacional se encontra, fa\'e7a o download e clique em portugu\'eas e avan\'e7ar;\par
\par
\b\f0 Servidor WEB \b0\f1\'e9 um tipo de \highlight1 servi\'e7o que vai receber o c\'f3digo que vamos escrever e enviar o que o cliente solicitou\highlight0 , o \ul\b c\'f3digo fonte n\'e3o fica do lado do cliente somente os dados que foi pedido pelo usu\'e1rio\ulnone\b0 , \highlight2 diferente do HTML\highlight0 , \ul que fica do lado do cliente\ulnone . Vamos usar o \highlight2 APACHE\highlight0  como servidor de web o mais usado no mundo inteiro.\par
\par
\b\f0 SGBD \b0\f1 (Sistema de gerenciamento de dados) \'e9 onde vamos guardar os dados do nosso futuro sistema, \ul que vamos desenvolver o SGBD que vamos usar vai ser o MYSQL\ulnone , mas poderia ser qualquer outro para WEB.\par
\par
\b\f0 Linguagem de programa\'e7\'e3o \b0\f1\'e9 o comando da pr\'f3pria linguagem que o IDE, no caso o Servidor Web, que vai interpretar.\par
\par
Para rodar tudo isso na nossa m\'e1quina local, vamos precisar instalar um simulador de servidor Web, que cont\'e9m APACHE, SGBD e a pr\'f3pria Linguagem, vamos instalar o XAMPP. O \ul XAMPP \'e9 um pacote com os principais servidores de c\'f3digo aberto do mercado, incluindo FTP, banco de dados MySQL e Apache com suporte \'e0s linguagens PHP e Perl\ulnone .\par
\par
\cf3\b\f0\fs28 Instalando o XAMPP\par
\b0\f1\fs26 1.Download do XAMPP\par
{\cf0\fs22{\field{\*\fldinst{HYPERLINK https://www.apachefriends.org/index.html }}{\fldrslt{https://www.apachefriends.org/index.html\ul0\cf0}}}}\cf5\f1\fs22 . Clique na guia download e escolha a \'faltima vers\'e3o do Xampp.\par
\par
\cf3\fs26 2.Instalando o XAMPP\par
\cf5\fs22 Depois do download, clica no setup que se encontra no canto inferior na esquerda e somente clica em avan\'e7ar.\par
\par
Pronto, agora que instalamos o IDE, NOTEPAD + + (ou VSCode) e o XAMPP, vamos colocar a m\'e3o na massa, agora vamos programar.\par
\cf3\fs26\par
1.3 Script do lado do cliente\par
\cf5\fs22 O Script do lado do cliente nada mais \'e9 do que o c\'f3digo fonte fica do lado do navegador, assim o servidor WEB, \ul joga todos os c\'f3digos juntos com o conte\'fado na m\'e1quina do cliente, exemplo o HTML, CSS e Javascript\ulnone .\par

\pard\sa200\sl276\slmult1\qj\cf0\par

\pard\qj\cf3\fs26 1.4 GUI e suas finalidade do lado do servidor\par
\cf5\fs22 O Script do lado do servidor e o c\'f3digo gerado pelo o programador no caso o PHP, fica \highlight1\b no servidor WEB\highlight0\b0 , e esse mesmo servidor manda somente os dados que o usu\'e1rio solicitou, junto com o HTML, nesse caso \ul nunca os usu\'e1rios v\'e3o ver o seus algoritmos pensados e elaborados pelo programador\ulnone .\par
\par
\b\f0 GUI \b0\f1 - \b\f0 Graphical User Interface \b0\f1 (Interface Gr\'e1fica do Usu\'e1rio, em portugu\'eas), \'e9 um modelo de interface entre o \highlight1\b humano e a m\'e1quina que permite a intera\'e7\'e3o com os dispositivos digitais atrav\'e9s de elementos gr\'e1ficos\highlight0\b0 . Exemplo seria o uso do phpMyAdmin para gerenciamento de banco de dados dentro do Xampp.\line\line\cf3\fs26 1.5 Sintaxe estrutura e POO\par
\cf5\fs22 Para que possamos conhecer e escrever de acordo com as boas pr\'e1ticas temos que compreender a sintaxe de cada linguagem de programa\'e7\'e3o, tipos regras e declara\'e7\'f5es, e no PHP n\'e3o fica de fora dessas regras. A sintaxe nada mais \'e9 \highlight2 que a organiza\'e7\'e3o da escrita que temos que ter na hora de codificar\highlight0 . Hoje pode-se escrever o PHP \ul\b na arquitetura estrutural e POO\ulnone\b0 , na estrutura escrevemos mais, j\'e1 na POO utilizamos o que j\'e1 foi codificado. Vamos entender agora o PHP estruturado, sendo que ambos usam a mesma sintaxe.\par
\par

\pard\sl240\slmult1\qj\cf8 <!DOCTYPE html>\par
<html lang="pt-br">\par
<head>\par
    <meta charset="UTF-8">\par
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\par
    <title>Ol\'e1 Mundo em PHP</title>\par
    <style>\par
        body \{\par
            font-family: Arial, sans-serif;\par
            background-color: #f0f0f0;\par
            margin: 0;\par
            padding: 0;\par
            display: flex;\par
            justify-content: center;\par
            align-items: center;\par
            height: 100vh;\par
        \}\par
        .container \{\par
            text-align: center;\par
        \}\par
        h1 \{\par
            color: #333;\par
            font-size: 3rem;\par
            margin-bottom: 20px;\par
        \}\par
        p \{\par
            color: #666;\par
            font-size: 1.2rem;\par
        \}\par
    </style>\par
</head>\par
<body>\par
    <div class="container">\par
        <?php\par
            $mensagem = "Ol\'e1 Mundo!";\par
            echo "<h1>$mensagem</h1>";\par
        ?>\par
        <p>Este \'e9 um exemplo de p\'e1gina PHP estilizada com HTML e CSS.</p>\par
    </div>\par
</body>\par
</html>\par

\pard\sa200\sl276\slmult1\qj\cf5\par

\pard\qj\cf0 Vale frisar que a linguagem PHP, fica embutido no HTML. Depois de escrever esse c\'f3digo fonte salvamos com a extens\'e3o \ldblquote .php\rdblquote , no servidor Web e logo em seguida iniciamos os servi\'e7os de servidor, que no nosso caso \'e9 o XAMPP.\par
\par

\pard\sa200\sl276\slmult1\qj\b RESUMO\par

\pard\qj\b0 No cap\'edtulo introdut\'f3rio, exploramos o PHP, uma linguagem de programa\'e7\'e3o de c\'f3digo aberto criada em 1994 por Rasmus Lerdorf. Inicialmente usada para armazenar dados de formul\'e1rios web, o PHP evoluiu para uma linguagem poderosa e segura para sistemas web.\par
Destacamos que o PHP \'e9 uma linguagem de servidor, que gera p\'e1ginas HTML din\'e2micas no servidor antes de envi\'e1-las aos usu\'e1rios. Discutimos a evolu\'e7\'e3o do PHP, a import\'e2ncia da integra\'e7\'e3o com HTML, ferramentas essenciais, como o Notepad + +, servidores web como o Apache, SGBD como o\par
MySQL e a sintaxe PHP. Este cap\'edtulo preparou o terreno para uma explora\'e7\'e3o mais profunda dos\par

\pard\sa200\sl276\slmult1\qj conceitos e pr\'e1ticas do PHP.\par
\b ATIVIDADES\par

\pard\qj\f0 1. \b0\f1 Descreva o prop\'f3sito e as caracter\'edsticas de um ambiente de programa\'e7\'e3o orientada a objetos (POO) em PHP. Quais s\'e3o as vantagens de adotar a POO em compara\'e7\'e3o com a programa\'e7\'e3o procedural?\par
\b\f0 2. \b0\f1 D\'ea exemplos de scripts do lado do cliente e do lado do servidor em PHP. Como esses dois tipos de scripts se diferenciam em termos de funcionalidade e localiza\'e7\'e3o da execu\'e7\'e3o?\par
\b\f0 3. \b0\f1 Explique o conceito de GUI (Graphical User Interface) e sua relev\'e2ncia no desenvolvimento web. Como a GUI \'e9 aplicada em sistemas web baseados em PHP?\par
\b\f0 4. \b0\f1 Destaque a import\'e2ncia da sintaxe na programa\'e7\'e3o PHP. Quais s\'e3o os principais elementos da sintaxe PHP que os programadores devem dominar para escrever c\'f3digo eficiente e leg\'edvel?\par
\b\f0 5. \b0\f1 Como podemos definir a linguagem PHP?\par
\b\f0 6. \b0\f1 O que precisamos fazer para codificar a linguagem PHP?\par
\b\f0 7. \b0\f1 Qual \'e9 a finalidade do XAMPP?\par
\b\f0 8\b0\f1 . Qual \'e9 a extens\'e3o do PHP?\par
\b\f0 9\b0\f1 . Qual \'e9 a diferen\'e7a entre coment\'e1rios de uma linha e coment\'e1rios de v\'e1rias linhas em PHP? Como voc\'ea adicionaria esses coment\'e1rios a um c\'f3digo PHP para documenta\'e7\'e3o e depura\'e7\'e3o?\par
\b\f0 10\b0\f1 . Em PHP, o que \'e9 uma estrutura condicional e por que ela \'e9 importante? D\'ea um exemplo de uso de uma estrutura "if" em um script PHP para tomar decis\'f5es com base em condi\'e7\'f5es.\par

\pard\sa200\sl276\slmult1\qj\par
----------------------------------------------------------------------------------------------------------\par

\pard\sl240\slmult1\qj\par
\b 1. Prop\'f3sito e Caracter\'edsticas da Programa\'e7\'e3o Orientada a Objetos (POO) em PHP:\par
\b0    A programa\'e7\'e3o orientada a objetos em PHP (POO) permite aos desenvolvedores organizar o c\'f3digo em objetos, que combinam dados e comportamentos relacionados. As caracter\'edsticas incluem encapsulamento, heran\'e7a, polimorfismo e abstra\'e7\'e3o. As vantagens de adotar a POO em compara\'e7\'e3o com a programa\'e7\'e3o procedural incluem modularidade, reutiliza\'e7\'e3o de c\'f3digo, facilita\'e7\'e3o da manuten\'e7\'e3o e extensibilidade do software.\par
\par
\b 2. Exemplos de Scripts do Lado do Cliente e do Lado do Servidor em PHP:\par
\b0    Um exemplo de script do lado do cliente em PHP pode ser um script embutido em uma p\'e1gina HTML para validar um formul\'e1rio antes de ser enviado para o servidor. Um exemplo de script do lado do servidor em PHP pode ser um script que processa os dados enviados por um formul\'e1rio HTML e os armazena em um banco de dados. A diferen\'e7a entre eles \'e9 que o script do lado do cliente \'e9 executado no navegador do usu\'e1rio, enquanto o script do lado do servidor \'e9 executado no servidor web.\par
\par
\b 3. Conceito de GUI (Graphical User Interface) e sua Relev\'e2ncia no Desenvolvimento Web:\par
\b0    A GUI refere-se \'e0 interface gr\'e1fica que permite a intera\'e7\'e3o entre o usu\'e1rio e o sistema. No desenvolvimento web, a GUI \'e9 aplicada na cria\'e7\'e3o de p\'e1ginas web com elementos visuais, como bot\'f5es, formul\'e1rios e menus, para facilitar a intera\'e7\'e3o do usu\'e1rio com o site ou aplicativo web. Em sistemas web baseados em PHP, a GUI \'e9 geralmente implementada usando HTML, CSS e JavaScript para criar uma experi\'eancia de usu\'e1rio intuitiva e agrad\'e1vel.\par
\par
\b 4. Import\'e2ncia da Sintaxe na Programa\'e7\'e3o PHP:\par
\b0    A sintaxe na programa\'e7\'e3o PHP \'e9 crucial para escrever c\'f3digo eficiente e leg\'edvel. Os principais elementos da sintaxe PHP que os programadores devem dominar incluem declara\'e7\'e3o de vari\'e1veis, estruturas condicionais (como if, else), loops (como for, while), fun\'e7\'f5es e classes. Uma sintaxe adequada facilita a compreens\'e3o do c\'f3digo por outros desenvolvedores e ajuda na detec\'e7\'e3o de erros.\par
\par
\b 5. Defini\'e7\'e3o da Linguagem PHP:\par
\b0    PHP \'e9 uma linguagem de programa\'e7\'e3o de c\'f3digo aberto amplamente utilizada para desenvolvimento de aplicativos web. Ela permite a cria\'e7\'e3o de p\'e1ginas din\'e2micas e interativas, processando dados do lado do servidor e gerando conte\'fado HTML para ser exibido no navegador do usu\'e1rio.\par
\par
\b 6. Codifica\'e7\'e3o da Linguagem PHP:\par
\b0    Para codificar em PHP, \'e9 necess\'e1rio um editor de texto ou uma IDE (Integrated Development Environment), como Notepad++, Visual Studio Code ou PHPStorm. Al\'e9m disso, \'e9 preciso um servidor web configurado para interpretar e executar os scripts PHP, como Apache, Nginx ou o servidor embutido do PHP. O c\'f3digo PHP \'e9 geralmente salvo em arquivos com a extens\'e3o ".php".\par
\par
\b 7. Finalidade do XAMPP:\par
\b0    O XAMPP \'e9 um pacote de software que inclui um servidor web Apache, um servidor de banco de dados MySQL e as linguagens de script PHP e Perl. Ele \'e9 usado para criar um ambiente de desenvolvimento local em um computador, permitindo aos desenvolvedores testar e desenvolver aplicativos web antes de implant\'e1-los em um servidor de produ\'e7\'e3o.\par
\par
\b 8. Extens\'e3o do PHP:\par
\b0    A extens\'e3o de arquivo padr\'e3o para scripts PHP \'e9 ".php".\par
\par
\b 9. Diferen\'e7a entre Coment\'e1rios de Uma Linha e de V\'e1rias Linhas em PHP:\par
\b0    Em PHP, um coment\'e1rio de uma linha \'e9 precedido por "//", enquanto um coment\'e1rio de v\'e1rias linhas \'e9 delimitado por "/*" no in\'edcio e "*/" no final. Os coment\'e1rios s\'e3o usados para documentar o c\'f3digo e fazer anota\'e7\'f5es para outros desenvolvedores. Eles s\'e3o \'fateis para explicar o prop\'f3sito de partes do c\'f3digo e para depurar problemas.\par
\par
\b 10. Estrutura Condicional em PHP e sua Import\'e2ncia:\par
\b0     Uma estrutura condicional em PHP, como a instru\'e7\'e3o "if", permite que o c\'f3digo tome decis\'f5es com base em condi\'e7\'f5es espec\'edficas. Por exemplo, um script PHP pode usar uma estrutura "if" para verificar se um usu\'e1rio est\'e1 logado antes de permitir o acesso a determinadas p\'e1ginas do site. As estruturas condicionais s\'e3o importantes para controlar o fluxo de execu\'e7\'e3o do programa e realizar diferentes a\'e7\'f5es com base em diferentes situa\'e7\'f5es.\par

\pard\sa200\sl276\slmult1\qj\cf5\par
\cf0\par
}
 